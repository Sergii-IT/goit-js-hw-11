{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"48862394-3b6e651acc095b3f3f471775f\";\nconst BASE_URL = \"https://pixabay.com/api/\";\n\nexport async function fetchImages(query) {\n  try {\n    const response = await axios.get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch: true,\n      },\n    });\n\n    return response.data.hits; // Повертаємо масив знайдених зображень\n  } catch (error) {\n    console.error(\"Помилка при отриманні зображень:\", error);\n    throw error;\n  }\n}","export function renderGallery(images) {\n    const gallery = document.querySelector(\"#gallery\");\n    gallery.innerHTML = \"\"; // Очищаємо попередні результати\n  \n    const markup = images\n      .map(\n        ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) =>\n          `<div class=\"gallery-item\">\n            <a href=\"${largeImageURL}\" target=\"_blank\">\n              <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\"/>\n            </a>\n            <div class=\"image-info\">\n              <p><strong>Likes:</strong> ${likes}</p>\n              <p><strong>Views:</strong> ${views}</p>\n              <p><strong>Comments:</strong> ${comments}</p>\n              <p><strong>Downloads:</strong> ${downloads}</p>\n            </div>\n          </div>`\n      )\n      .join(\"\");\n  \n    gallery.innerHTML = markup;\n  }","import { fetchImages } from \"./js/pixabay-api\";\nimport { renderGallery } from \"./js/render-functions\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst form = document.querySelector(\"#search-form\");\n\nform.addEventListener(\"submit\", async (event) => {\n  event.preventDefault();\n  \n  const query = event.target.elements.searchQuery.value.trim();\n  if (!query) {\n    iziToast.warning({\n      title: \"Warning\",\n      message: \"Please enter a search term\",\n      position: \"topRight\",\n    });\n    return;\n  }\n\n  try {\n    const images = await fetchImages(query);\n\n    if (images.length === 0) {\n      iziToast.error({\n        title: \"Error\",\n        message: \"Sorry, there are no images matching your search query. Please try again!\",\n        position: \"topRight\",\n      });\n      return;\n    }\n\n    renderGallery(images);\n  } catch (error) {\n    iziToast.error({\n      title: \"Error\",\n      message: \"Something went wrong. Please try again later.\",\n      position: \"topRight\",\n    });\n  }\n});"],"names":["API_KEY","BASE_URL","fetchImages","query","axios","error","renderGallery","images","gallery","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","event","iziToast"],"mappings":"iyBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAO,CACvC,GAAI,CAWF,OAViB,MAAMC,EAAM,IAAIH,EAAU,CACzC,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,GAEe,KAAK,IACtB,OAAQE,EAAO,CACd,cAAQ,MAAM,mCAAoCA,CAAK,EACjDA,CACP,CACH,CCtBO,SAASC,EAAcC,EAAQ,CAClC,MAAMC,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAY,GAEpB,MAAMC,EAASF,EACZ,IACC,CAAC,CAAE,aAAAG,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IACvE;AAAA,uBACaL,CAAa;AAAA,0BACVD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,2CAGTC,CAAK;AAAA,2CACLC,CAAK;AAAA,8CACFC,CAAQ;AAAA,+CACPC,CAAS;AAAA;AAAA,iBAGjD,EACA,KAAK,EAAE,EAEVR,EAAQ,UAAYC,CACxB,CCjBA,MAAMQ,EAAO,SAAS,cAAc,cAAc,EAElDA,EAAK,iBAAiB,SAAU,MAAOC,GAAU,CAC/CA,EAAM,eAAc,EAEpB,MAAMf,EAAQe,EAAM,OAAO,SAAS,YAAY,MAAM,OACtD,GAAI,CAACf,EAAO,CACVgB,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,6BACT,SAAU,UAChB,CAAK,EACD,MACD,CAED,GAAI,CACF,MAAMZ,EAAS,MAAML,EAAYC,CAAK,EAEtC,GAAII,EAAO,SAAW,EAAG,CACvBY,EAAS,MAAM,CACb,MAAO,QACP,QAAS,2EACT,SAAU,UAClB,CAAO,EACD,MACD,CAEDb,EAAcC,CAAM,CACrB,MAAe,CACdY,EAAS,MAAM,CACb,MAAO,QACP,QAAS,gDACT,SAAU,UAChB,CAAK,CACF,CACH,CAAC"}